 11     const transporter = nodemailer.createTransport({
 12         host: "smtp.mailtrap.io",
 13         port: 2525,
 14         auth: {
 15             user: "a4d97faebd0f42",
 16             pass: "0cd4380880256a"
 17         }
 18     });
 19 
 20 
 21     const mailOptions = {
 22         from: 'ceozentrum@gmail.com',
 23         to: 'jerekaarsene@gmail.com',
 24         subject: 'Sending Email using Node.js',
 25         text: 'That was easy!'
 26     };
 27 
 28     transporter.sendMail(mailOptions, function(error, info){
 29         if (error) {
 30             res.status(500).json("Error encountered: " + error.message)
 31    i     } else {
 32             res.status(200).json("Email sent successfully" + info.response);
 33         }
 34     });
 35 
 36 })

 // GOOGLE OAuth2
 const CLIENT_ID = process.env.CLIENT_ID;
const SECRET_ID = process.env.SECRET_ID;
const REDIRECT_URI = process.env.REDIRECT_URI;
const REFRESH_TOKEN = process.env.REFRESH_TOKEN;

const oAuth2Client = new google.auth.OAuth2(CLIENT_ID, SECRET_ID, REDIRECT_URI);

oAuth2Client.setCredentials({ refresh_token: REFRESH_TOKEN });

// Send email function
async function sendMail() {
  try {
    const accessToken = await oAuth2Client.getAccessToken();

    const transport = nodemailer.createTransport({
      service: "gmail",
      auth: {
        type: "OAuth2",
        user: "jerekaarsene@gmail.com",
        clientId: CLIENT_ID,
        clientSecret: SECRET_ID,
        refreshToken: REFRESH_TOKEN,
        accessToken: accessToken,
      },
    });

    const mailOptions = {
      from: "Ceozentrum <services@ceozentrum.de>",
      to: "jerekaarsene@gmail.com",
      subject: "Hello from gmail using API",
      text: "Hello from gmail email using API",
      html: "<h1>Hello from gmail email using API</h1>",
    };

    const result = await transport.sendMail(mailOptions);
    return result;
  } catch (error) {
    return error;
  }
}

